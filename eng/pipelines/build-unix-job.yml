# Build on Unix
parameters:
- name: jobName
  type: string
  default: ''
- name: testArtifactName
  type: string
  default: ''
- name: configuration
  type: string
  default: 'Debug'
- name: queueName
  type: string
  default: ''
- name: vmImageName
  type: string
  default: ''

jobs:
- job: ${{ parameters.jobName }}
  pool:
    ${{ if ne(parameters.queueName, '') }}:
      name: NetCore1ESPool-Public
      demands: ImageOverride -equals ${{ parameters.queueName }}

    ${{ if ne(parameters.vmImageName, '') }}:
      vmImage: ${{ parameters.vmImageName }}
  timeoutInMinutes: 40

  steps:
    - template: checkout-unix-task.yml

    - script: echo "##vso[task.setvariable variable=NUGET_PACKAGES]$(Build.SourcesDirectory)/.packages"
      displayName: Set NuGet Packages Directory

    - task: CacheBeta@1
      displayName: .dotnet Cache
      inputs:
        key: '"dotnet" |  "$(Agent.OS)" | $(Build.SourcesDirectory)/global.json'
        path: $(Build.SourcesDirectory)/.dotnet
      continueOnError: true

    - task: CacheBeta@1
      displayName: .packages Cache
      inputs:
        key: 'nuget | $(Agent.OS) | $(Build.SourcesDirectory)/global.json | $(Build.SourcesDirectory)/eng/Versions.props | $(Build.SourcesDirectory)/eng/Version.Details.xml'
        path: $(NUGET_PACKAGES)
        cacheHitVar: NUGET_CACHE_RESTORED
      continueOnError: true

    - script: ./eng/build.sh --ci --restore --prepareMachine --binaryLog --configuration ${{ parameters.configuration }}
      displayName: Restore
      env:
        NUGET_PACKAGES: $(NUGET_PACKAGES)

    - script: ./eng/build.sh --ci --build --publish --pack --prepareMachine --binaryLog --skipDocumentation --configuration ${{ parameters.configuration }}
      displayName: Build

    - script: ./eng/prepare-tests.sh
      displayName: Prepare Test Payload

    - task: PublishPipelineArtifact@1
      displayName: Publish Test Payload
      inputs:
        targetPath: '$(Build.SourcesDirectory)/artifacts/testPayload'
        artifactName: ${{ parameters.testArtifactName }}

    - template: publish-logs.yml
      parameters:
        configuration: ${{ parameters.configuration }}
        jobName: ${{ parameters.jobName }}
